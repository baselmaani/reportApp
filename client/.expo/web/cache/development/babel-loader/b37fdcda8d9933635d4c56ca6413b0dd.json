{"ast":null,"code":"export function distance(lat1, lon1, lat2, lon2) {\n  var unit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'K';\n  var radlat1 = Math.PI * lat1 / 180;\n  var radlat2 = Math.PI * lat2 / 180;\n  var theta = lon1 - lon2;\n  var radtheta = Math.PI * theta / 180;\n  var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n  dist = Math.acos(dist);\n  dist = dist * 180 / Math.PI;\n  dist = dist * 60 * 1.1515;\n\n  if (unit == 'K') {\n    dist = dist * 1.609344;\n  }\n\n  if (unit == 'N') {\n    dist = dist * 0.8684;\n  }\n\n  return dist.toFixed(3);\n}","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/helpers/helper.js"],"names":["distance","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","toFixed"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,IAApC,EAAsD;AAAA,MAAZC,IAAY,uEAAL,GAAK;AAC3D,MAAIC,OAAO,GAAIC,IAAI,CAACC,EAAL,GAAUP,IAAX,GAAmB,GAAjC;AACA,MAAIQ,OAAO,GAAIF,IAAI,CAACC,EAAL,GAAUL,IAAX,GAAmB,GAAjC;AACA,MAAIO,KAAK,GAAGR,IAAI,GAAGE,IAAnB;AACA,MAAIO,QAAQ,GAAIJ,IAAI,CAACC,EAAL,GAAUE,KAAX,GAAoB,GAAnC;AACA,MAAIE,IAAI,GACNL,IAAI,CAACM,GAAL,CAASP,OAAT,IAAoBC,IAAI,CAACM,GAAL,CAASJ,OAAT,CAApB,GACAF,IAAI,CAACO,GAAL,CAASR,OAAT,IAAoBC,IAAI,CAACO,GAAL,CAASL,OAAT,CAApB,GAAwCF,IAAI,CAACO,GAAL,CAASH,QAAT,CAF1C;AAGAC,EAAAA,IAAI,GAAGL,IAAI,CAACQ,IAAL,CAAUH,IAAV,CAAP;AACAA,EAAAA,IAAI,GAAIA,IAAI,GAAG,GAAR,GAAeL,IAAI,CAACC,EAA3B;AACAI,EAAAA,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAY,MAAnB;;AACA,MAAIP,IAAI,IAAI,GAAZ,EAAiB;AACfO,IAAAA,IAAI,GAAGA,IAAI,GAAG,QAAd;AACD;;AACD,MAAIP,IAAI,IAAI,GAAZ,EAAiB;AACfO,IAAAA,IAAI,GAAGA,IAAI,GAAG,MAAd;AACD;;AACD,SAAOA,IAAI,CAACI,OAAL,CAAa,CAAb,CAAP;AACD","sourcesContent":["export function distance(lat1, lon1, lat2, lon2, unit = 'K') {\n  var radlat1 = (Math.PI * lat1) / 180;\n  var radlat2 = (Math.PI * lat2) / 180;\n  var theta = lon1 - lon2;\n  var radtheta = (Math.PI * theta) / 180;\n  var dist =\n    Math.sin(radlat1) * Math.sin(radlat2) +\n    Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n  dist = Math.acos(dist);\n  dist = (dist * 180) / Math.PI;\n  dist = dist * 60 * 1.1515;\n  if (unit == 'K') {\n    dist = dist * 1.609344;\n  }\n  if (unit == 'N') {\n    dist = dist * 0.8684;\n  }\n  return dist.toFixed(3);\n}\n"]},"metadata":{},"sourceType":"module"}