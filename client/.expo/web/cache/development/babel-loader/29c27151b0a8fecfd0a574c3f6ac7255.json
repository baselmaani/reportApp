{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { useProfile } from \"../../hooks/useProfile\";\nimport LoadingView from \"../../shared/loading/LoadingView\";\nimport { Avatar, Button, TextInput, TouchableRipple } from 'react-native-paper';\nimport Layout from \"../../shared/layout/Layout\";\nimport { usePickImage } from \"../../hooks/usePickImage\";\nimport { useSaveProfile } from \"../../hooks/useSaveProfile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Profile = function Profile() {\n  var _useProfile = useProfile(),\n      data = _useProfile.data,\n      isLoading = _useProfile.isLoading;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tel = _useState4[0],\n      setTel = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      originalImage = _useState8[0],\n      setOriginalImage = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pickedImage = _useState10[0],\n      setPickedImage = _useState10[1];\n\n  var onSavePhoto = function onSavePhoto(photo) {\n    setPickedImage(photo);\n  };\n\n  var _usePickImage = usePickImage({\n    onSelectImage: onSavePhoto\n  }),\n      pickImage = _usePickImage.pickImage;\n\n  var saveMutation = useSaveProfile();\n  useEffect(function () {\n    if (data) {\n      setName(data.name);\n      setEmail(data.email);\n      setTel(data.tel);\n    }\n  }, [data]);\n\n  var onSaveProfile = function onSaveProfile() {\n    saveMutation.mutate({\n      pickedImage: pickedImage,\n      image: originalImage,\n      name: name,\n      email: email,\n      tel: tel\n    });\n  };\n\n  if (isLoading) return _jsx(LoadingView, {});\n  var points = data.points.reduce(function (acc, us) {\n    return acc + us.value;\n  }, 0);\n  return _jsx(Layout, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.imageContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: pickImage,\n          children: _jsx(Avatar.Image, {\n            size: 100,\n            source: pickedImage !== null && pickedImage !== '' ? {\n              uri: \"data:image/png;base64,\" + pickedImage\n            } : originalImage !== null && originalImage !== '' ? {\n              uri: originalImage\n            } : require(\"../../../assets/avatar.png\")\n          })\n        }), _jsx(View, {\n          children: _jsx(View, {\n            style: styles.pointsContainer,\n            children: _jsx(Text, {\n              style: styles.pointsStyle,\n              children: points\n            })\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          label: 'Namn',\n          placeholder: \"Namn\",\n          value: name,\n          onChangeText: function onChangeText(txt) {\n            return setName(txt);\n          }\n        })\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          label: 'Email',\n          placeholder: \"Email\",\n          value: email,\n          onChangeText: function onChangeText(txt) {\n            return setEmail(txt);\n          }\n        })\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"phone\",\n          label: 'telefon',\n          value: tel,\n          onChangeText: function onChangeText(txt) {\n            return setTel(txt);\n          }\n        })\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(Button, {\n          onPress: function onPress() {\n            return onSaveProfile();\n          },\n          mode: \"contained\",\n          children: \"Spara\"\n        })\n      })]\n    })\n  });\n};\n\nexport default Profile;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  imageContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  inputContainer: {\n    marginTop: 10\n  },\n  pointsStyle: {\n    fontSize: 40,\n    color: '#2196F3'\n  },\n  pointsContainer: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/pages/profile/Profile.js"],"names":["React","useState","useEffect","useProfile","LoadingView","Avatar","Button","TextInput","TouchableRipple","Layout","usePickImage","useSaveProfile","Profile","data","isLoading","email","setEmail","tel","setTel","name","setName","originalImage","setOriginalImage","pickedImage","setPickedImage","onSavePhoto","photo","onSelectImage","pickImage","saveMutation","onSaveProfile","mutate","image","points","reduce","acc","us","value","styles","container","imageContainer","uri","require","pointsContainer","pointsStyle","inputContainer","txt","StyleSheet","create","padding","justifyContent","alignItems","marginTop","marginBottom","fontSize","color"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { useProfile } from '../../hooks/useProfile';\nimport LoadingView from '../../shared/loading/LoadingView';\nimport { Avatar, Button, TextInput, TouchableRipple } from 'react-native-paper';\nimport Layout from '../../shared/layout/Layout';\nimport { usePickImage } from '../../hooks/usePickImage';\nimport { useSaveProfile } from '../../hooks/useSaveProfile';\n\nconst Profile = () => {\n  const { data, isLoading } = useProfile();\n  const [email, setEmail] = useState('');\n  const [tel, setTel] = useState('');\n  const [name, setName] = useState('');\n  const [originalImage, setOriginalImage] = useState('');\n  const [pickedImage, setPickedImage] = useState('');\n\n  const onSavePhoto = (photo) => {\n    setPickedImage(photo);\n  };\n\n  const { pickImage } = usePickImage({ onSelectImage: onSavePhoto });\n  const saveMutation = useSaveProfile();\n\n  useEffect(() => {\n    if (data) {\n      setName(data.name);\n      setEmail(data.email);\n      setTel(data.tel);\n    }\n  }, [data]);\n\n  const onSaveProfile = () => {\n    saveMutation.mutate({\n      pickedImage,\n      image: originalImage,\n      name,\n      email,\n      tel,\n    });\n  };\n  if (isLoading) return <LoadingView />;\n\n  const points = data.points.reduce((acc, us) => acc + us.value, 0);\n  return (\n    <Layout>\n      <View style={styles.container}>\n        <View style={styles.imageContainer}>\n          <TouchableOpacity onPress={pickImage}>\n            <Avatar.Image\n              size={100}\n              source={\n                pickedImage !== null && pickedImage !== ''\n                  ? { uri: `data:image/png;base64,${pickedImage}` }\n                  : originalImage !== null && originalImage !== ''\n                  ? { uri: originalImage }\n                  : require('../../../assets/avatar.png')\n              }\n            />\n          </TouchableOpacity>\n          <View>\n            <View style={styles.pointsContainer}>\n              <Text style={styles.pointsStyle}>{points}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput\n            label={'Namn'}\n            placeholder='Namn'\n            value={name}\n            onChangeText={(txt) => setName(txt)}\n          />\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput\n            label={'Email'}\n            placeholder='Email'\n            value={email}\n            onChangeText={(txt) => setEmail(txt)}\n          />\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput\n            placeholder='phone'\n            label={'telefon'}\n            value={tel}\n            onChangeText={(txt) => setTel(txt)}\n          />\n        </View>\n        <View style={styles.inputContainer}>\n          <Button onPress={() => onSaveProfile()} mode='contained'>\n            Spara\n          </Button>\n        </View>\n      </View>\n    </Layout>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n  },\n  imageContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  inputContainer: {\n    marginTop: 10,\n  },\n  pointsStyle: {\n    fontSize: 40,\n    color: '#2196F3',\n  },\n  pointsContainer: {\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}