{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { IconButton } from 'react-native-paper';\nimport { useSaveFeedReaction } from \"../../hooks/useSaveFeedReaction\";\nimport { useStateValue } from \"../../providers/StateContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ReactionIcons = function ReactionIcons(_ref) {\n  var _feed$feedReactions;\n\n  var feed = _ref.feed;\n  var addReaction = useSaveFeedReaction();\n\n  var _useStateValue = useStateValue(),\n      _useStateValue2 = _slicedToArray(_useStateValue, 1),\n      user = _useStateValue2[0].user;\n\n  var onAdd = function onAdd(value) {\n    addReaction.mutate({\n      feedId: feed.id,\n      value: value\n    });\n  };\n\n  var userReactions = feed != null && feed.feedReactions ? feed == null ? void 0 : (_feed$feedReactions = feed.feedReactions) == null ? void 0 : _feed$feedReactions.filter(function (c) {\n    return c.userId === user.id;\n  }) : [];\n  return _jsxs(View, {\n    style: styles.reactionsStyle,\n    children: [_jsxs(View, {\n      children: [_jsx(IconButton, {\n        icon: \"heart\",\n        color: userReactions != null && userReactions.find(function (c) {\n          return c.value === 'heart';\n        }) ? '#E91E63' : '#3c3c3c50',\n        onPress: function onPress() {\n          return onAdd('heart');\n        }\n      }), _jsx(Text, {\n        style: styles.count,\n        children: feed == null ? void 0 : feed.feedReactions.filter(function (c) {\n          return c.value === 'heart';\n        }).length\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(IconButton, {\n        icon: \"thumb-up\",\n        color: userReactions != null && userReactions.find(function (c) {\n          return c.value === 'thumb-up';\n        }) ? '#03A9F4' : '#3c3c3c50',\n        onPress: function onPress() {\n          return onAdd('thumb-up');\n        }\n      }), _jsx(Text, {\n        style: styles.count,\n        children: feed == null ? void 0 : feed.feedReactions.filter(function (c) {\n          return c.value === 'thumb-up';\n        }).length\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(IconButton, {\n        icon: \"thumb-down\",\n        color: userReactions != null && userReactions.find(function (c) {\n          return c.value === 'thumb-down';\n        }) ? '#FFC107' : '#3c3c3c50',\n        onPress: function onPress() {\n          return onAdd('thumb-down');\n        }\n      }), _jsx(Text, {\n        style: styles.count,\n        children: feed == null ? void 0 : feed.feedReactions.filter(function (c) {\n          return c.value === 'thumb-down';\n        }).length\n      })]\n    })]\n  });\n};\n\nexport default ReactionIcons;\nvar styles = StyleSheet.create({\n  reactionsStyle: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  count: {\n    textAlign: 'center',\n    color: '#3c3c3c50'\n  }\n});","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/pages/news/ReactionIcons.js"],"names":["React","IconButton","useSaveFeedReaction","useStateValue","ReactionIcons","feed","addReaction","user","onAdd","value","mutate","feedId","id","userReactions","feedReactions","filter","c","userId","styles","reactionsStyle","find","count","length","StyleSheet","create","flexDirection","justifyContent","marginBottom","textAlign","color"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React from 'react';\nimport { IconButton } from 'react-native-paper';\nimport { useSaveFeedReaction } from '../../hooks/useSaveFeedReaction';\nimport { useStateValue } from '../../providers/StateContext';\nconst ReactionIcons = ({ feed }) => {\n  const addReaction = useSaveFeedReaction();\n  const [{ user }] = useStateValue();\n\n  const onAdd = (value) => {\n    addReaction.mutate({\n      feedId: feed.id,\n      value,\n    });\n  };\n\n  const userReactions = feed?.feedReactions\n    ? feed?.feedReactions?.filter((c) => c.userId === user.id)\n    : [];\n  return (\n    <View style={styles.reactionsStyle}>\n      <View>\n        <IconButton\n          icon='heart'\n          color={\n            userReactions?.find((c) => c.value === 'heart')\n              ? '#E91E63'\n              : '#3c3c3c50'\n          }\n          onPress={() => onAdd('heart')}\n        />\n        <Text style={styles.count}>\n          {feed?.feedReactions.filter((c) => c.value === 'heart').length}\n        </Text>\n      </View>\n      <View>\n        <IconButton\n          icon='thumb-up'\n          color={\n            userReactions?.find((c) => c.value === 'thumb-up')\n              ? '#03A9F4'\n              : '#3c3c3c50'\n          }\n          onPress={() => onAdd('thumb-up')}\n        />\n        <Text style={styles.count}>\n          {feed?.feedReactions.filter((c) => c.value === 'thumb-up').length}\n        </Text>\n      </View>\n      <View>\n        <IconButton\n          icon='thumb-down'\n          color={\n            userReactions?.find((c) => c.value === 'thumb-down')\n              ? '#FFC107'\n              : '#3c3c3c50'\n          }\n          onPress={() => onAdd('thumb-down')}\n        />\n        <Text style={styles.count}>\n          {feed?.feedReactions.filter((c) => c.value === 'thumb-down').length}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport default ReactionIcons;\n\nconst styles = StyleSheet.create({\n  reactionsStyle: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n  count: {\n    textAlign: 'center',\n    color: '#3c3c3c50',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}