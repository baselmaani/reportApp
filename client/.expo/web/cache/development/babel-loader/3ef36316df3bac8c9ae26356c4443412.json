{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nexport var usePickImage = function usePickImage(_ref) {\n  var onSelectImage = _ref.onSelectImage;\n\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              onSelectImage(result.base64);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    pickImage: pickImage\n  };\n};","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/hooks/usePickImage.js"],"names":["ImagePicker","usePickImage","onSelectImage","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","cancelled"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AACjD,MAAMC,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEGH,WAAW,CAACI,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAEL,WAAW,CAACM,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE,CAJ4C;AAKrDC,cAAAA,MAAM,EAAE;AAL6C,aAApC,CAFH;;AAAA;AAEZC,YAAAA,MAFY;;AAUhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrBX,cAAAA,aAAa,CAACU,MAAM,CAACD,MAAR,CAAb;AACD;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeA,SAAO;AACLR,IAAAA,SAAS,EAATA;AADK,GAAP;AAGD,CAnBM","sourcesContent":["import * as ImagePicker from 'expo-image-picker';\n\nexport const usePickImage = ({ onSelectImage }) => {\n  const pickImage = async () => {\n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.cancelled) {\n      onSelectImage(result.base64);\n    }\n  };\n\n  return {\n    pickImage,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}