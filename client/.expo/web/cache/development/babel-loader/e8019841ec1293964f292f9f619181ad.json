{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from 'react';\nimport { Button, IconButton, TextInput } from 'react-native-paper';\nimport CameraView from \"../../shared/camera/CameraView\";\nimport ImagesList from \"../../shared/imagesList/ImagesList\";\nimport { usePickImage } from \"../../hooks/usePickImage\";\nimport PublicSection from \"../../shared/publicSection/PublicSection\";\nimport CategoriesList from \"../../shared/categoriesList.js/CategoriesList\";\nimport { useSaveReport } from \"../../hooks/useSaveReport\";\nimport { useCurrentLocation } from \"../../hooks/useCurrentLocation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddReportForm = function AddReportForm(_ref) {\n  var onCancel = _ref.onCancel;\n\n  var _useCurrentLocation = useCurrentLocation(),\n      currentLocation = _useCurrentLocation.currentLocation;\n\n  var onSavePhoto = function onSavePhoto(photo) {\n    if (!capturedPhotos.find(function (c) {\n      return c === photo;\n    })) {\n      setCapturedPhotos(function (prev) {\n        return [].concat(_toConsumableArray(prev), [photo]);\n      });\n    }\n  };\n\n  var _usePickImage = usePickImage({\n    onSelectImage: onSavePhoto\n  }),\n      pickImage = _usePickImage.pickImage;\n\n  var saveReport = useSaveReport();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      capturedPhotos = _useState2[0],\n      setCapturedPhotos = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCategories = _useState4[0],\n      setSelectedCategory = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      displayCamera = _useState10[0],\n      setDisplayCamera = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isPublic = _useState12[0],\n      setIsPublic = _useState12[1];\n\n  var onRemoveImage = function onRemoveImage(img) {\n    setCapturedPhotos(function (prev) {\n      return prev.filter(function (c) {\n        return c !== img;\n      });\n    });\n  };\n\n  var onSelectCategory = function onSelectCategory(category) {\n    if (selectedCategories.find(function (c) {\n      return c.id === category.id;\n    })) {\n      setSelectedCategory(selectedCategories.filter(function (c) {\n        return c.id !== category.id;\n      }));\n    } else {\n      setSelectedCategory([].concat(_toConsumableArray(selectedCategories), [category]));\n    }\n  };\n\n  var onSubmit = function onSubmit() {\n    saveReport.mutate({\n      title: title,\n      description: description,\n      latitude: currentLocation.latitude,\n      longitude: currentLocation.longitude,\n      categories: selectedCategories.map(function (c) {\n        return c.id;\n      }),\n      images: capturedPhotos,\n      isPublic: isPublic\n    });\n    onCancel();\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(TextInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: function onChangeText(txt) {\n            return setTitle(txt);\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"description\",\n          multiline: true,\n          style: styles.descriptionStyle,\n          value: description,\n          onChangeText: function onChangeText(txt) {\n            return setDescription(txt);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.IconContainer,\n        children: [_jsx(IconButton, {\n          icon: \"camera\",\n          color: '#03A9F4',\n          size: 40,\n          onPress: function onPress() {\n            return setDisplayCamera(true);\n          },\n          style: {\n            paddiing: 10\n          }\n        }), _jsx(IconButton, {\n          icon: \"image\",\n          color: '#4CAF50',\n          size: 40,\n          onPress: pickImage,\n          style: {\n            paddiing: 10\n          }\n        })]\n      }), _jsx(PublicSection, {\n        onChange: function onChange() {\n          return setIsPublic(!isPublic);\n        },\n        value: isPublic\n      }), capturedPhotos.length > 0 && _jsx(ImagesList, {\n        images: capturedPhotos,\n        onRemoveImage: onRemoveImage\n      }), _jsx(CategoriesList, {\n        onSelect: onSelectCategory,\n        selectedItems: selectedCategories\n      })]\n    }), _jsxs(View, {\n      style: styles.btnContainer,\n      children: [_jsx(Button, {\n        onPress: onCancel,\n        children: \"Cancel\"\n      }), _jsx(Button, {\n        disabled: selectedCategories.length <= 0 || capturedPhotos.length <= 0 && description === '',\n        onPress: onSubmit,\n        mode: \"contained\",\n        children: \"Spara\"\n      })]\n    }), displayCamera && _jsx(CameraView, {\n      onTake: onSavePhoto,\n      onClose: function onClose() {\n        return setDisplayCamera(false);\n      }\n    })]\n  });\n};\n\nexport default AddReportForm;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff',\n    padding: 2,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'space-between',\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  cameraContainer: {\n    width: '100%',\n    height: '50%'\n  },\n  camera: {\n    backgroundColor: '#333',\n    height: '100%'\n  },\n  textContainer: {\n    marginTop: 10,\n    backgroundColor: '#fff'\n  },\n  descriptionStyle: {\n    marginTop: 10,\n    height: 150\n  },\n  IconContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/pages/home/AddReportForm.js"],"names":["React","useState","Button","IconButton","TextInput","CameraView","ImagesList","usePickImage","PublicSection","CategoriesList","useSaveReport","useCurrentLocation","AddReportForm","onCancel","currentLocation","onSavePhoto","photo","capturedPhotos","find","c","setCapturedPhotos","prev","onSelectImage","pickImage","saveReport","selectedCategories","setSelectedCategory","title","setTitle","description","setDescription","displayCamera","setDisplayCamera","isPublic","setIsPublic","onRemoveImage","img","filter","onSelectCategory","category","id","onSubmit","mutate","latitude","longitude","categories","map","images","styles","container","content","textContainer","txt","descriptionStyle","IconContainer","paddiing","length","btnContainer","StyleSheet","create","backgroundColor","padding","width","height","justifyContent","paddingTop","paddingBottom","cameraContainer","camera","marginTop","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  ScrollView,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport { Button, IconButton, TextInput } from 'react-native-paper';\nimport CameraView from '../../shared/camera/CameraView';\nimport ImagesList from '../../shared/imagesList/ImagesList';\nimport { usePickImage } from '../../hooks/usePickImage';\nimport PublicSection from '../../shared/publicSection/PublicSection';\nimport CategoriesList from '../../shared/categoriesList.js/CategoriesList';\nimport { useSaveReport } from '../../hooks/useSaveReport';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\n\nconst AddReportForm = ({ onCancel }) => {\n  const { currentLocation } = useCurrentLocation();\n  const onSavePhoto = (photo) => {\n    if (!capturedPhotos.find((c) => c === photo)) {\n      setCapturedPhotos((prev) => [...prev, photo]);\n    }\n  };\n\n  const { pickImage } = usePickImage({ onSelectImage: onSavePhoto });\n  const saveReport = useSaveReport();\n\n  const [capturedPhotos, setCapturedPhotos] = useState([]);\n  const [selectedCategories, setSelectedCategory] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const [displayCamera, setDisplayCamera] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n\n  const onRemoveImage = (img) => {\n    setCapturedPhotos((prev) => prev.filter((c) => c !== img));\n  };\n  const onSelectCategory = (category) => {\n    if (selectedCategories.find((c) => c.id === category.id)) {\n      setSelectedCategory(\n        selectedCategories.filter((c) => c.id !== category.id)\n      );\n    } else {\n      setSelectedCategory([...selectedCategories, category]);\n    }\n  };\n\n  const onSubmit = () => {\n    saveReport.mutate({\n      title: title,\n      description,\n      latitude: currentLocation.latitude,\n      longitude: currentLocation.longitude,\n      categories: selectedCategories.map((c) => c.id),\n      images: capturedPhotos,\n      isPublic,\n    });\n    onCancel();\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.content}>\n        <View style={styles.textContainer}>\n          <TextInput\n            placeholder='Title'\n            value={title}\n            onChangeText={(txt) => setTitle(txt)}\n          />\n          <TextInput\n            placeholder='description'\n            multiline\n            style={styles.descriptionStyle}\n            value={description}\n            onChangeText={(txt) => setDescription(txt)}\n          />\n        </View>\n        <View style={styles.IconContainer}>\n          <IconButton\n            icon='camera'\n            color={'#03A9F4'}\n            size={40}\n            onPress={() => setDisplayCamera(true)}\n            style={{ paddiing: 10 }}\n          />\n\n          <IconButton\n            icon='image'\n            color={'#4CAF50'}\n            size={40}\n            onPress={pickImage}\n            style={{ paddiing: 10 }}\n          />\n        </View>\n\n        <PublicSection\n          onChange={() => setIsPublic(!isPublic)}\n          value={isPublic}\n        />\n        {capturedPhotos.length > 0 && (\n          <ImagesList images={capturedPhotos} onRemoveImage={onRemoveImage} />\n        )}\n        <CategoriesList\n          onSelect={onSelectCategory}\n          selectedItems={selectedCategories}\n        />\n      </ScrollView>\n      <View style={styles.btnContainer}>\n        <Button onPress={onCancel}>Cancel</Button>\n        <Button\n          disabled={\n            selectedCategories.length <= 0 ||\n            (capturedPhotos.length <= 0 && description === '')\n          }\n          onPress={onSubmit}\n          mode='contained'\n        >\n          Spara\n        </Button>\n      </View>\n\n      {displayCamera && (\n        <CameraView\n          onTake={onSavePhoto}\n          onClose={() => setDisplayCamera(false)}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default AddReportForm;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff',\n    padding: 2,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'space-between',\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  cameraContainer: {\n    width: '100%',\n    height: '50%',\n  },\n  camera: {\n    backgroundColor: '#333',\n    height: '100%',\n  },\n  textContainer: {\n    marginTop: 10,\n    backgroundColor: '#fff',\n  },\n  descriptionStyle: {\n    marginTop: 10,\n    height: 150,\n  },\n\n  IconContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}