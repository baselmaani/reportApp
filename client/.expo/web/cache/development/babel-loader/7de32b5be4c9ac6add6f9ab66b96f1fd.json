{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { IconButton } from 'react-native-paper';\nimport { usePickImage } from \"../../hooks/usePickImage\";\nimport ImagesList from \"../../shared/imagesList/ImagesList\";\nimport { useSaveComment } from \"../../hooks/useSaveComment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  var feedId = _ref.feedId;\n  var saveComment = useSaveComment();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImages = _useState2[0],\n      setSelectedImages = _useState2[1];\n\n  var onSavePhoto = function onSavePhoto(photo) {\n    if (!selectedImages.find(function (c) {\n      return c === photo;\n    })) {\n      setSelectedImages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [photo]);\n      });\n    }\n  };\n\n  var _usePickImage = usePickImage({\n    onSelectImage: onSavePhoto\n  }),\n      pickImage = _usePickImage.pickImage;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comment = _useState4[0],\n      setComment = _useState4[1];\n\n  var onRemoveImage = function onRemoveImage(photo) {\n    setSelectedImages(selectedImages.filter(function (c) {\n      return c !== photo;\n    }));\n  };\n\n  var onSaveComment = function onSaveComment() {\n    saveComment.mutate({\n      feedId: feedId,\n      content: comment,\n      images: selectedImages\n    });\n    setComment('');\n    setSelectedImages([]);\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        children: _jsx(IconButton, {\n          onPress: pickImage,\n          icon: \"image\",\n          color: \"#3c3c3c\",\n          size: 30\n        })\n      }), _jsx(View, {\n        style: styles.inputStyle,\n        children: _jsx(TextInput, {\n          value: comment,\n          onChangeText: function onChangeText(txt) {\n            return setComment(txt);\n          },\n          autoCapitalize: \"none\",\n          multiline: true,\n          style: styles.input\n        })\n      }), _jsx(View, {\n        children: _jsx(IconButton, {\n          onPress: onSaveComment,\n          icon: 'send',\n          color: \"#3c3c3c\",\n          size: 30,\n          disabled: comment === '' && selectedImages.length <= 0\n        })\n      })]\n    }), _jsx(View, {\n      children: selectedImages.length > 0 && _jsx(ImagesList, {\n        images: selectedImages,\n        onRemoveImage: onRemoveImage\n      })\n    })]\n  });\n};\n\nexport default CommentForm;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    padding: 0,\n    borderRadius: 10\n  },\n  inputStyle: {\n    flex: 1,\n    marginTop: 15,\n    borderColor: '#f0f0f0',\n    borderWidth: 1,\n    borderRadius: 8\n  },\n  input: {\n    backgroundColor: '#f0f0f050',\n    fontSize: 18,\n    padding: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/pages/news/CommentForm.js"],"names":["React","useState","IconButton","usePickImage","ImagesList","useSaveComment","CommentForm","feedId","saveComment","selectedImages","setSelectedImages","onSavePhoto","photo","find","c","prev","onSelectImage","pickImage","comment","setComment","onRemoveImage","filter","onSaveComment","mutate","content","images","styles","container","inputStyle","txt","input","length","StyleSheet","create","flexDirection","alignItems","padding","borderRadius","flex","marginTop","borderColor","borderWidth","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, FlatList, TextInput } from 'react-native';\nimport React, { useState } from 'react';\nimport { IconButton } from 'react-native-paper';\nimport { usePickImage } from '../../hooks/usePickImage';\nimport ImagesList from '../../shared/imagesList/ImagesList';\nimport { useSaveComment } from '../../hooks/useSaveComment';\n\nconst CommentForm = ({ feedId }) => {\n  const saveComment = useSaveComment();\n\n  const [selectedImages, setSelectedImages] = useState([]);\n  const onSavePhoto = (photo) => {\n    if (!selectedImages.find((c) => c === photo)) {\n      setSelectedImages((prev) => [...prev, photo]);\n    }\n  };\n\n  const { pickImage } = usePickImage({ onSelectImage: onSavePhoto });\n  const [comment, setComment] = useState('');\n\n  const onRemoveImage = (photo) => {\n    setSelectedImages(selectedImages.filter((c) => c !== photo));\n  };\n\n  const onSaveComment = () => {\n    saveComment.mutate({\n      feedId,\n      content: comment,\n      images: selectedImages,\n    });\n    setComment('');\n    setSelectedImages([]);\n  };\n\n  return (\n    <View>\n      <View style={styles.container}>\n        <View>\n          <IconButton\n            onPress={pickImage}\n            icon='image'\n            color='#3c3c3c'\n            size={30}\n          />\n        </View>\n        <View style={styles.inputStyle}>\n          <TextInput\n            value={comment}\n            onChangeText={(txt) => setComment(txt)}\n            autoCapitalize='none'\n            multiline\n            style={styles.input}\n          />\n        </View>\n        <View>\n          <IconButton\n            onPress={onSaveComment}\n            icon={'send'}\n            color='#3c3c3c'\n            size={30}\n            disabled={comment === '' && selectedImages.length <= 0}\n          />\n        </View>\n      </View>\n      <View>\n        {selectedImages.length > 0 && (\n          <ImagesList images={selectedImages} onRemoveImage={onRemoveImage} />\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default CommentForm;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    padding: 0,\n    borderRadius: 10,\n  },\n  inputStyle: {\n    flex: 1,\n    marginTop: 15,\n    borderColor: '#f0f0f0',\n    borderWidth: 1,\n    borderRadius: 8,\n  },\n  input: {\n    backgroundColor: '#f0f0f050',\n    fontSize: 18,\n    padding: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}