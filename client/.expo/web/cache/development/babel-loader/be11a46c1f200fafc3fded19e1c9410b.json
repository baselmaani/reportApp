{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axiosInstance from \"./config/axiosInstance\";\nimport { urls } from \"./config/urls\";\n\nvar Auth = function () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n  }\n\n  _createClass(Auth, null, [{\n    key: \"login\",\n    value: function login(_ref) {\n      var email, password, result;\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref.email, password = _ref.password;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axiosInstance('post', urls.auth.login, {\n                email: email,\n                password: password\n              }).then(function (res) {\n                return res.data;\n              }));\n\n            case 3:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"register\",\n    value: function register(data) {\n      var result;\n      return _regeneratorRuntime.async(function register$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(axiosInstance('post', urls.auth.register, data).then(function (res) {\n                return res.data;\n              }));\n\n            case 2:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      var result;\n      return _regeneratorRuntime.async(function getUserInfo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(axiosInstance('get', urls.auth.getUser).then(function (res) {\n                return res.data;\n              }));\n\n            case 2:\n              result = _context3.sent;\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/api/Auth.js"],"names":["axiosInstance","urls","Auth","email","password","auth","login","then","res","data","result","register","getUser"],"mappings":";;;AAAA,OAAOA,aAAP;AACA,SAASC,IAAT;;IAEMC,I;;;;;;;WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBC,cAAAA,KAArB,QAAqBA,KAArB,EAA4BC,QAA5B,QAA4BA,QAA5B;AAAA;AAAA,+CACuBJ,aAAa,CAAC,MAAD,EAASC,IAAI,CAACI,IAAL,CAAUC,KAAnB,EAA0B;AAC1DH,gBAAAA,KAAK,EAALA,KAD0D;AAE1DC,gBAAAA,QAAQ,EAARA;AAF0D,eAA1B,CAAb,CAGlBG,IAHkB,CAGb,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAb;AAAA,eAHa,CADvB;;AAAA;AACQC,cAAAA,MADR;AAAA,+CAKSA,MALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAQA,kBAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuBT,aAAa,CAAC,MAAD,EAASC,IAAI,CAACI,IAAL,CAAUM,QAAnB,EAA6BF,IAA7B,CAAb,CAAgDF,IAAhD,CACnB,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAb;AAAA,eADmB,CADvB;;AAAA;AACQC,cAAAA,MADR;AAAA,gDAISA,MAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuBV,aAAa,CAAC,KAAD,EAAQC,IAAI,CAACI,IAAL,CAAUO,OAAlB,CAAb,CAAwCL,IAAxC,CACnB,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAb;AAAA,eADmB,CADvB;;AAAA;AACQC,cAAAA,MADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAMF,eAAeR,IAAf","sourcesContent":["import axiosInstance from './config/axiosInstance';\nimport { urls } from './config/urls';\n\nclass Auth {\n  static async login({ email, password }) {\n    const result = await axiosInstance('post', urls.auth.login, {\n      email,\n      password,\n    }).then((res) => res.data);\n    return result;\n  }\n\n  static async register(data) {\n    const result = await axiosInstance('post', urls.auth.register, data).then(\n      (res) => res.data\n    );\n    return result;\n  }\n\n  static async getUserInfo() {\n    const result = await axiosInstance('get', urls.auth.getUser).then(\n      (res) => res.data\n    );\n  }\n}\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}