{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { Component, useState } from 'react';\nimport MapView from 'react-native-maps';\nimport Map from \"./Map\";\nimport { useNearByReports } from \"../../hooks/useNearByReports\";\nimport ReportListItem from \"./ReportListItem\";\nimport { useCurrentLocation } from \"../../hooks/useCurrentLocation\";\nimport { Feather } from '@expo/vector-icons';\nimport { Button, IconButton, Modal, Portal, Provider } from 'react-native-paper';\nimport AddReportForm from \"./AddReportForm\";\nimport ReportsListModel from \"./ReportsListModel\";\nimport Layout from \"../../shared/layout/Layout\";\nimport ReportDetails from \"./ReportDetails\";\nimport LoadingView from \"../../shared/loading/LoadingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayAdd = _useState2[0],\n      setDisplayAdd = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedReport = _useState4[0],\n      setSelectedReport = _useState4[1];\n\n  var _useCurrentLocation = useCurrentLocation(),\n      currentLocation = _useCurrentLocation.currentLocation,\n      initRegion = _useCurrentLocation.initRegion;\n\n  var _useNearByReports = useNearByReports({\n    lat: currentLocation.latitude,\n    lng: currentLocation.longitude\n  }),\n      data = _useNearByReports.data,\n      isLoading = _useNearByReports.isLoading,\n      isError = _useNearByReports.isError;\n\n  if (isLoading) return _jsx(LoadingView, {});\n  console.log(initRegion);\n  return _jsx(Layout, {\n    children: _jsxs(Provider, {\n      children: [_jsx(Portal, {\n        children: _jsx(Modal, {\n          contentContainerStyle: styles.addNewModal,\n          visible: displayAdd,\n          onDismiss: function onDismiss() {\n            return setDisplayAdd(false);\n          },\n          children: _jsx(AddReportForm, {\n            onCancel: function onCancel() {\n              return setDisplayAdd(false);\n            }\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.mapContainer,\n          children: _jsx(Map, {\n            locations: data,\n            initRegion: initRegion == null ? void 0 : initRegion.coords\n          })\n        }), _jsxs(View, {\n          style: styles.reportsItemsSection,\n          children: [_jsx(View, {\n            style: styles.plusContainer,\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setDisplayAdd(true);\n              },\n              style: styles.plus,\n              children: _jsx(Feather, {\n                name: \"plus\",\n                size: 40,\n                color: \"#fff\"\n              })\n            })\n          }), _jsx(FlatList, {\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            },\n            showsHorizontalScrollIndicator: false,\n            horizontal: true,\n            data: data,\n            renderItem: function renderItem(_ref2) {\n              var item = _ref2.item;\n              return _jsx(ReportListItem, {\n                item: item,\n                horizontal: true,\n                currentLocation: currentLocation,\n                onPress: function onPress() {\n                  return setSelectedReport(item);\n                }\n              }, item.id);\n            }\n          }), _jsx(Button, {\n            style: styles.btn,\n            onPress: function onPress() {\n              return navigation.navigate('reports');\n            },\n            children: \"Visa alla\"\n          })]\n        })]\n      }), _jsxs(Modal, {\n        visible: selectedReport !== null,\n        onDismiss: function onDismiss() {\n          return setSelectedReport(null);\n        },\n        children: [_jsx(IconButton, {\n          icon: \"close\",\n          onPress: function onPress() {\n            return setSelectedReport(null);\n          },\n          style: styles.closeButton\n        }), _jsx(ReportDetails, {\n          report: selectedReport,\n          currentLocation: currentLocation\n        })]\n      })]\n    })\n  });\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%'\n  },\n  mapContainer: {\n    height: '70%'\n  },\n  plusContainer: {\n    position: 'absolute',\n    top: -30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  plus: {\n    padding: 10,\n    backgroundColor: '#4CAF50',\n    borderRadius: 40\n  },\n  addNewModal: {\n    backgroundColor: '#fff',\n    padding: 10\n  },\n  reportsItemsSection: {\n    paddingTop: 40,\n    justifyContent: 'space-between'\n  },\n  btn: {\n    padding: 10\n  },\n  closeButton: {\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/Basel/Downloads/reportsApp-master/reportsApp-master/client/src/pages/home/Home.js"],"names":["React","Component","useState","MapView","Map","useNearByReports","ReportListItem","useCurrentLocation","Feather","Button","IconButton","Modal","Portal","Provider","AddReportForm","ReportsListModel","Layout","ReportDetails","LoadingView","Home","navigation","displayAdd","setDisplayAdd","selectedReport","setSelectedReport","currentLocation","initRegion","lat","latitude","lng","longitude","data","isLoading","isError","console","log","styles","addNewModal","container","mapContainer","coords","reportsItemsSection","plusContainer","plus","item","id","btn","navigate","closeButton","StyleSheet","create","flex","width","height","position","top","justifyContent","alignItems","padding","backgroundColor","borderRadius","paddingTop"],"mappings":"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","sourcesContent":["import {\n  Text,\n  StyleSheet,\n  View,\n  FlatList,\n  TouchableOpacity,\n} from 'react-native';\nimport React, { Component, useState } from 'react';\nimport MapView from 'react-native-maps';\nimport Map from './Map';\nimport { useNearByReports } from '../../hooks/useNearByReports';\nimport ReportListItem from './ReportListItem';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport { Feather } from '@expo/vector-icons';\nimport {\n  Button,\n  IconButton,\n  Modal,\n  Portal,\n  Provider,\n} from 'react-native-paper';\nimport AddReportForm from './AddReportForm';\nimport ReportsListModel from './ReportsListModel';\nimport Layout from '../../shared/layout/Layout';\nimport ReportDetails from './ReportDetails';\nimport LoadingView from '../../shared/loading/LoadingView';\n\nconst Home = ({ navigation }) => {\n  const [displayAdd, setDisplayAdd] = useState(false);\n  const [selectedReport, setSelectedReport] = useState(null);\n\n  const { currentLocation, initRegion } = useCurrentLocation();\n\n  const { data, isLoading, isError } = useNearByReports({\n    lat: currentLocation.latitude,\n    lng: currentLocation.longitude,\n  });\n\n  if (isLoading) return <LoadingView />;\n  console.log(initRegion);\n  return (\n    <Layout>\n      <Provider>\n        <Portal>\n          <Modal\n            contentContainerStyle={styles.addNewModal}\n            visible={displayAdd}\n            onDismiss={() => setDisplayAdd(false)}\n          >\n            <AddReportForm onCancel={() => setDisplayAdd(false)} />\n          </Modal>\n        </Portal>\n        <View style={styles.container}>\n          <View style={styles.mapContainer}>\n            <Map locations={data} initRegion={initRegion?.coords} />\n          </View>\n          <View style={styles.reportsItemsSection}>\n            <View style={styles.plusContainer}>\n              <TouchableOpacity\n                onPress={() => setDisplayAdd(true)}\n                style={styles.plus}\n              >\n                <Feather name='plus' size={40} color='#fff' />\n              </TouchableOpacity>\n            </View>\n            <FlatList\n              keyExtractor={(item) => item.id}\n              showsHorizontalScrollIndicator={false}\n              horizontal={true}\n              data={data}\n              renderItem={({ item }) => (\n                <ReportListItem\n                  key={item.id}\n                  item={item}\n                  horizontal={true}\n                  currentLocation={currentLocation}\n                  onPress={() => setSelectedReport(item)}\n                />\n              )}\n            />\n            <Button\n              style={styles.btn}\n              onPress={() => navigation.navigate('reports')}\n            >\n              Visa alla\n            </Button>\n          </View>\n        </View>\n\n        <Modal\n          visible={selectedReport !== null}\n          onDismiss={() => setSelectedReport(null)}\n        >\n          <IconButton\n            icon='close'\n            onPress={() => setSelectedReport(null)}\n            style={styles.closeButton}\n          />\n          <ReportDetails\n            report={selectedReport}\n            currentLocation={currentLocation}\n          />\n        </Modal>\n      </Provider>\n    </Layout>\n  );\n};\n\nexport default Home;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n  },\n  mapContainer: {\n    height: '70%',\n  },\n  plusContainer: {\n    position: 'absolute',\n    top: -30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  plus: {\n    padding: 10,\n    backgroundColor: '#4CAF50',\n    borderRadius: 40,\n  },\n  addNewModal: {\n    backgroundColor: '#fff',\n    padding: 10,\n  },\n  reportsItemsSection: {\n    paddingTop: 40,\n    justifyContent: 'space-between',\n  },\n  btn: {\n    padding: 10,\n  },\n  closeButton: {\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}