{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, IconButton } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport openMap from 'react-native-open-maps';\nimport { useReportById } from \"../../hooks/useReportById\";\nimport ReportReactionsChart from \"../../shared/charts/ReportReactionsChart\";\nimport Layout from \"../../shared/layout/Layout\";\nimport LoadingView from \"../../shared/loading/LoadingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ReportDetails = function ReportDetails(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params.id;\n\n  var _useReportById = useReportById(id),\n      data = _useReportById.data,\n      isLoading = _useReportById.isLoading;\n\n  if (isLoading) return _jsx(LoadingView, {});\n  return _jsx(Layout, {\n    goBack: true,\n    children: _jsxs(Card, {\n      style: styles.cardStyle,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: data == null ? void 0 : data.title\n      }), _jsx(Text, {\n        style: styles.description,\n        children: data == null ? void 0 : data.description\n      }), _jsx(Text, {\n        style: styles.description,\n        children: \"reagerade anv\\xE4ndare \" + data.reportReactions.length\n      }), _jsx(View, {\n        style: styles.imagesContainer,\n        children: _jsx(FlatList, {\n          data: data == null ? void 0 : data.images,\n          keyExtractor: function keyExtractor(_ref2) {\n            var item = _ref2.item;\n            return item;\n          },\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsx(Image, {\n              source: {\n                uri: item\n              },\n              style: styles.imageItem\n            });\n          }\n        })\n      }), _jsx(View, {\n        children: _jsx(ReportReactionsChart, {\n          reportReactions: data.reportReactions\n        })\n      })]\n    })\n  });\n};\n\nexport default ReportDetails;\nvar styles = StyleSheet.create({\n  imageItem: {\n    width: 300,\n    height: 200,\n    margin: 10\n  },\n  cardStyle: {\n    margin: 10,\n    padding: 20\n  },\n  title: {\n    fontSize: 20\n  },\n  description: {\n    color: '#3c3c3c70'\n  },\n  imagesContainer: {\n    marginTop: 20,\n    marginBottom: 20\n  },\n  mapLink: {\n    position: 'absolute',\n    top: -10,\n    right: -10,\n    zIndex: 99\n  }\n});","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/pages/home/ReportDetails.js"],"names":["React","useState","useEffect","Card","IconButton","Slider","openMap","useReportById","ReportReactionsChart","Layout","LoadingView","ReportDetails","route","navigation","id","params","data","isLoading","styles","cardStyle","title","description","reportReactions","length","imagesContainer","images","item","uri","imageItem","StyleSheet","create","width","height","margin","padding","fontSize","color","marginTop","marginBottom","mapLink","position","top","right","zIndex"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,oBAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,aAAT;AACA,OAAOC,oBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC/C,MAAQC,EAAR,GAAeF,KAAK,CAACG,MAArB,CAAQD,EAAR;;AAEA,uBAA4BP,aAAa,CAACO,EAAD,CAAzC;AAAA,MAAQE,IAAR,kBAAQA,IAAR;AAAA,MAAcC,SAAd,kBAAcA,SAAd;;AAEA,MAAIA,SAAJ,EAAe,OAAO,KAAC,WAAD,KAAP;AACf,SACE,KAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,IAAhB;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA,kBAA4BJ,IAA5B,oBAA4BA,IAAI,CAAEI;AAAlC,QADF,EAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA,kBAAkCL,IAAlC,oBAAkCA,IAAI,CAAEK;AAAxC,QAFF,EAGE,KAAC,IAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACG,WADhB;AAAA,8CAEyBL,IAAI,CAACM,eAAL,CAAqBC;AAF9C,QAHF,EAME,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,eAApB;AAAA,kBACE,KAAC,QAAD;AACE,UAAA,IAAI,EAAER,IAAF,oBAAEA,IAAI,CAAES,MADd;AAEE,UAAA,YAAY,EAAE;AAAA,gBAAGC,IAAH,SAAGA,IAAH;AAAA,mBAAcA,IAAd;AAAA,WAFhB;AAGE,UAAA,UAAU,EAAE,IAHd;AAIE,UAAA,8BAA8B,EAAE,KAJlC;AAKE,UAAA,UAAU,EAAE;AAAA,gBAAGA,IAAH,SAAGA,IAAH;AAAA,mBACV,KAAC,KAAD;AAAO,cAAA,MAAM,EAAE;AAAEC,gBAAAA,GAAG,EAAED;AAAP,eAAf;AAA8B,cAAA,KAAK,EAAER,MAAM,CAACU;AAA5C,cADU;AAAA;AALd;AADF,QANF,EAiBE,KAAC,IAAD;AAAA,kBACE,KAAC,oBAAD;AAAsB,UAAA,eAAe,EAAEZ,IAAI,CAACM;AAA5C;AADF,QAjBF;AAAA;AADF,IADF;AAyBD,CA/BD;;AAiCA,eAAeX,aAAf;AAEA,IAAMO,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,KAAK,EAAE,GADE;AAETC,IAAAA,MAAM,EAAE,GAFC;AAGTC,IAAAA,MAAM,EAAE;AAHC,GADoB;AAM/Bd,EAAAA,SAAS,EAAE;AACTc,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,OAAO,EAAE;AAFA,GANoB;AAU/Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,QAAQ,EAAE;AADL,GAVwB;AAa/Bd,EAAAA,WAAW,EAAE;AACXe,IAAAA,KAAK,EAAE;AADI,GAbkB;AAgB/BZ,EAAAA,eAAe,EAAE;AACfa,IAAAA,SAAS,EAAE,EADI;AAEfC,IAAAA,YAAY,EAAE;AAFC,GAhBc;AAoB/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,GAAG,EAAE,CAAC,EAFC;AAGPC,IAAAA,KAAK,EAAE,CAAC,EAHD;AAIPC,IAAAA,MAAM,EAAE;AAJD;AApBsB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, Image, FlatList } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { Card, IconButton } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport openMap from 'react-native-open-maps';\nimport { useReportById } from '../../hooks/useReportById';\nimport ReportReactionsChart from '../../shared/charts/ReportReactionsChart';\nimport Layout from '../../shared/layout/Layout';\nimport LoadingView from '../../shared/loading/LoadingView';\n\nconst ReportDetails = ({ route, navigation }) => {\n  const { id } = route.params;\n\n  const { data, isLoading } = useReportById(id);\n\n  if (isLoading) return <LoadingView />;\n  return (\n    <Layout goBack={true}>\n      <Card style={styles.cardStyle}>\n        <Text style={styles.title}>{data?.title}</Text>\n        <Text style={styles.description}>{data?.description}</Text>\n        <Text\n          style={styles.description}\n        >{`reagerade anv√§ndare ${data.reportReactions.length}`}</Text>\n        <View style={styles.imagesContainer}>\n          <FlatList\n            data={data?.images}\n            keyExtractor={({ item }) => item}\n            horizontal={true}\n            showsHorizontalScrollIndicator={false}\n            renderItem={({ item }) => (\n              <Image source={{ uri: item }} style={styles.imageItem} />\n            )}\n          />\n        </View>\n        <View>\n          <ReportReactionsChart reportReactions={data.reportReactions} />\n        </View>\n      </Card>\n    </Layout>\n  );\n};\n\nexport default ReportDetails;\n\nconst styles = StyleSheet.create({\n  imageItem: {\n    width: 300,\n    height: 200,\n    margin: 10,\n  },\n  cardStyle: {\n    margin: 10,\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n  },\n  description: {\n    color: '#3c3c3c70',\n  },\n  imagesContainer: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  mapLink: {\n    position: 'absolute',\n    top: -10,\n    right: -10,\n    zIndex: 99,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}