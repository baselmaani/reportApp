{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useStateValue } from \"./StateContext\";\nimport jwtDecode from 'jwt-decode';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LocalStorageContainer = function LocalStorageContainer(_ref) {\n  var children = _ref.children;\n\n  var _useStateValue = useStateValue(),\n      _useStateValue2 = _slicedToArray(_useStateValue, 2);\n\n  _objectDestructuringEmpty(_useStateValue2[0]);\n\n  var changeState = _useStateValue2[1];\n  useEffect(function () {\n    var getToken = function _callee() {\n      var tkn, decoded;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 2:\n              tkn = _context.sent;\n\n              if (tkn && tkn !== null && tkn !== '') {\n                decoded = jwtDecode(tkn);\n\n                if (decoded && decoded.exp * 1000 > new Date()) {\n                  changeState({\n                    type: 'SET_USER',\n                    payload: decoded\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getToken();\n  }, []);\n  return _jsx(_Fragment, {\n    children: children\n  });\n};\n\nexport default LocalStorageContainer;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/providers/LocalStorageContainer.js"],"names":["React","useEffect","useState","AsyncStorage","useStateValue","jwtDecode","LocalStorageContainer","children","changeState","getToken","getItem","tkn","decoded","exp","Date","type","payload","styles","StyleSheet","create"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,aAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC9C,uBAA0BH,aAAa,EAAvC;AAAA;;AAAA;;AAAA,MAAWI,WAAX;AACAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CADH;;AAAA;AACTC,cAAAA,GADS;;AAEf,kBAAIA,GAAG,IAAIA,GAAG,KAAK,IAAf,IAAuBA,GAAG,KAAK,EAAnC,EAAuC;AAC/BC,gBAAAA,OAD+B,GACrBP,SAAS,CAACM,GAAD,CADY;;AAErC,oBAAIC,OAAO,IAAIA,OAAO,CAACC,GAAR,GAAc,IAAd,GAAqB,IAAIC,IAAJ,EAApC,EAAgD;AAC9CN,kBAAAA,WAAW,CAAC;AACVO,oBAAAA,IAAI,EAAE,UADI;AAEVC,oBAAAA,OAAO,EAAEJ;AAFC,mBAAD,CAAX;AAID;AACF;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAaAH,IAAAA,QAAQ;AACT,GAfQ,EAeN,EAfM,CAAT;AAgBA,SAAO;AAAA,cAAGF;AAAH,IAAP;AACD,CAnBD;;AAqBA,eAAeD,qBAAf;AAEA,IAAMW,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useStateValue } from './StateContext';\nimport jwtDecode from 'jwt-decode';\n\nconst LocalStorageContainer = ({ children }) => {\n  const [{}, changeState] = useStateValue();\n  useEffect(() => {\n    const getToken = async () => {\n      const tkn = await AsyncStorage.getItem('token');\n      if (tkn && tkn !== null && tkn !== '') {\n        const decoded = jwtDecode(tkn);\n        if (decoded && decoded.exp * 1000 > new Date()) {\n          changeState({\n            type: 'SET_USER',\n            payload: decoded,\n          });\n        }\n      }\n    };\n\n    getToken();\n  }, []);\n  return <>{children}</>;\n};\n\nexport default LocalStorageContainer;\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}