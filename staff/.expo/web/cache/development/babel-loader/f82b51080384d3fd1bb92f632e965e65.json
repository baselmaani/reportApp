{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { TextInput } from 'react-native-paper';\nimport CustomButton from \"../../shared/button/CustomButton\";\nimport { useRegister } from \"../../hooks/useRegister\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function Signup(_ref) {\n  var setCurrentView = _ref.setCurrentView;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tel = _useState6[0],\n      setTel = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showPassword = _useState10[0],\n      setShowPassword = _useState10[1];\n\n  var _useRegister = useRegister(),\n      mutate = _useRegister.mutate,\n      isLoading = _useRegister.isLoading;\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        value: name,\n        onChangeText: function onChangeText(txt) {\n          return setName(txt);\n        },\n        placeholder: \"Name\"\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        value: email,\n        onChangeText: function onChangeText(txt) {\n          return setEmail(txt);\n        },\n        placeholder: \"email\"\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        value: tel,\n        onChangeText: function onChangeText(txt) {\n          return setTel(txt);\n        },\n        placeholder: \"Telephone\"\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        value: password,\n        onChangeText: function onChangeText(txt) {\n          return setPassword(txt);\n        },\n        placeholder: \"password\",\n        secureTextEntry: !showPassword,\n        right: showPassword === true ? _jsx(TextInput.Icon, {\n          onPress: function onPress() {\n            return setShowPassword(false);\n          },\n          name: \"eye-off\"\n        }) : _jsx(TextInput.Icon, {\n          name: \"eye\",\n          onPress: function onPress() {\n            return setShowPassword(true);\n          }\n        })\n      })\n    }), _jsx(View, {\n      style: styles.btnContainer,\n      children: _jsx(CustomButton, {\n        onPress: function onPress() {\n          return mutate({\n            email: email,\n            password: password,\n            tel: tel,\n            name: name\n          });\n        },\n        disabled: isLoading,\n        title: isLoading ? ' loading ...' : 'Sign up'\n      })\n    }), _jsx(View, {\n      style: styles.btnContainer,\n      children: _jsx(CustomButton, {\n        onPress: function onPress() {\n          return setCurrentView('login');\n        },\n        disabled: isLoading,\n        title: \"Login\",\n        style: {\n          backgroundColor: '#333'\n        }\n      })\n    })]\n  });\n};\n\nexport default Signup;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    padding: 20\n  },\n  inputContainer: {\n    marginTop: 10\n  },\n  btnContainer: {\n    marginTop: 15\n  }\n});","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/pages/auth/Signup.js"],"names":["React","useState","TextInput","CustomButton","useRegister","Signup","setCurrentView","name","setName","email","setEmail","tel","setTel","password","setPassword","showPassword","setShowPassword","mutate","isLoading","styles","inputContainer","txt","btnContainer","backgroundColor","StyleSheet","create","container","flex","justifyContent","padding","marginTop"],"mappings":"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","sourcesContent":["import { StyleSheet, View } from 'react-native';\nimport React, { useState } from 'react';\nimport { TextInput } from 'react-native-paper';\nimport CustomButton from '../../shared/button/CustomButton';\nimport { useRegister } from '../../hooks/useRegister';\n\nconst Signup = ({ setCurrentView }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [tel, setTel] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(true);\n\n  const { mutate, isLoading } = useRegister();\n\n  return (\n    <View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          value={name}\n          onChangeText={(txt) => setName(txt)}\n          placeholder='Name'\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          value={email}\n          onChangeText={(txt) => setEmail(txt)}\n          placeholder='email'\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          value={tel}\n          onChangeText={(txt) => setTel(txt)}\n          placeholder='Telephone'\n        />\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          value={password}\n          onChangeText={(txt) => setPassword(txt)}\n          placeholder='password'\n          secureTextEntry={!showPassword}\n          right={\n            showPassword === true ? (\n              <TextInput.Icon\n                onPress={() => setShowPassword(false)}\n                name='eye-off'\n              />\n            ) : (\n              <TextInput.Icon\n                name='eye'\n                onPress={() => setShowPassword(true)}\n              />\n            )\n          }\n        />\n      </View>\n      <View style={styles.btnContainer}>\n        <CustomButton\n          onPress={() =>\n            mutate({\n              email,\n              password,\n              tel,\n              name,\n            })\n          }\n          disabled={isLoading}\n          title={isLoading ? ' loading ...' : 'Sign up'}\n        />\n      </View>\n\n      <View style={styles.btnContainer}>\n        <CustomButton\n          onPress={() => setCurrentView('login')}\n          disabled={isLoading}\n          title='Login'\n          style={{ backgroundColor: '#333' }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default Signup;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  inputContainer: {\n    marginTop: 10,\n  },\n  btnContainer: {\n    marginTop: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}