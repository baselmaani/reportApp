{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React from 'react';\nimport { IconButton } from 'react-native-paper';\nimport { useDeleteComment } from \"../../hooks/useDeleteComment\";\nimport { useStateValue } from \"../../providers/StateContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CommentItem = function CommentItem(_ref) {\n  var _comment$user, _comment$user2, _comment$user3, _comment$user4, _comment$user5;\n\n  var comment = _ref.comment;\n  var deleteMutation = useDeleteComment();\n\n  var _useStateValue = useStateValue(),\n      _useStateValue2 = _slicedToArray(_useStateValue, 1),\n      user = _useStateValue2[0].user;\n\n  var onDelete = function onDelete() {\n    deleteMutation.mutate({\n      id: comment.id\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.userContainer,\n      children: [comment != null && (_comment$user = comment.user) != null && _comment$user.image && (comment == null ? void 0 : (_comment$user2 = comment.user) == null ? void 0 : _comment$user2.image) !== '' ? _jsx(Image, {\n        source: {\n          uri: comment == null ? void 0 : (_comment$user3 = comment.user) == null ? void 0 : _comment$user3.image\n        },\n        style: styles.userImage\n      }) : _jsx(Image, {\n        source: require(\"../../../assets/avatar.png\"),\n        style: styles.userImage\n      }), _jsx(Text, {\n        children: comment == null ? void 0 : (_comment$user4 = comment.user) == null ? void 0 : _comment$user4.name\n      })]\n    }), _jsxs(View, {\n      style: styles.commentContent,\n      children: [(user == null ? void 0 : user.id) === (comment == null ? void 0 : (_comment$user5 = comment.user) == null ? void 0 : _comment$user5.id) && _jsx(View, {\n        style: styles.changeContainer,\n        children: _jsx(IconButton, {\n          icon: \"close\",\n          onPress: onDelete,\n          color: \"#F44336\"\n        })\n      }), _jsx(View, {\n        style: styles.contentContainer,\n        children: _jsx(Text, {\n          children: comment == null ? void 0 : comment.content\n        })\n      }), _jsx(View, {\n        style: styles.imagesContainer,\n        children: _jsx(FlatList, {\n          keyExtractor: function keyExtractor(item) {\n            return item;\n          },\n          data: comment == null ? void 0 : comment.images,\n          horizontal: true,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(View, {\n              children: _jsx(Image, {\n                source: {\n                  uri: item\n                },\n                style: styles.commentImage\n              })\n            });\n          }\n        })\n      })]\n    })]\n  });\n};\n\nexport default CommentItem;\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 10\n  },\n  userContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  userImage: {\n    width: 30,\n    height: 30,\n    marginRight: 10\n  },\n  commentContent: {\n    padding: 10,\n    marginTop: 5,\n    borderTopRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    backgroundColor: '#f0f0f0'\n  },\n  contentContainer: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  imagesContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  commentImage: {\n    width: 200,\n    height: 200\n  },\n  changeContainer: {\n    flexDirection: 'row-reverse',\n    position: 'absolute',\n    right: 10\n  }\n});","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/pages/news/CommentItem.js"],"names":["React","IconButton","useDeleteComment","useStateValue","CommentItem","comment","deleteMutation","user","onDelete","mutate","id","styles","container","userContainer","image","uri","userImage","require","name","commentContent","changeContainer","contentContainer","content","imagesContainer","item","images","commentImage","StyleSheet","create","marginBottom","flexDirection","alignItems","width","height","marginRight","padding","marginTop","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","paddingTop","paddingBottom","justifyContent","position","right"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, FlatList } from 'react-native';\nimport React from 'react';\nimport { IconButton } from 'react-native-paper';\nimport { useDeleteComment } from '../../hooks/useDeleteComment';\nimport { useStateValue } from '../../providers/StateContext';\n\nconst CommentItem = ({ comment }) => {\n  const deleteMutation = useDeleteComment();\n  const [{ user }] = useStateValue();\n\n  const onDelete = () => {\n    deleteMutation.mutate({\n      id: comment.id,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.userContainer}>\n        {comment?.user?.image && comment?.user?.image !== '' ? (\n          <Image\n            source={{ uri: comment?.user?.image }}\n            style={styles.userImage}\n          />\n        ) : (\n          <Image\n            source={require('../../../assets/avatar.png')}\n            style={styles.userImage}\n          />\n        )}\n\n        <Text>{comment?.user?.name}</Text>\n      </View>\n      <View style={styles.commentContent}>\n        {user?.id === comment?.user?.id && (\n          <View style={styles.changeContainer}>\n            <IconButton icon='close' onPress={onDelete} color='#F44336' />\n          </View>\n        )}\n        <View style={styles.contentContainer}>\n          <Text>{comment?.content}</Text>\n        </View>\n        <View style={styles.imagesContainer}>\n          <FlatList\n            keyExtractor={(item) => item}\n            data={comment?.images}\n            horizontal={true}\n            renderItem={({ item }) => (\n              <View>\n                <Image source={{ uri: item }} style={styles.commentImage} />\n              </View>\n            )}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default CommentItem;\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 10,\n  },\n  userContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  userImage: {\n    width: 30,\n    height: 30,\n    marginRight: 10,\n  },\n  commentContent: {\n    padding: 10,\n    marginTop: 5,\n    borderTopRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    backgroundColor: '#f0f0f0',\n  },\n  contentContainer: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  imagesContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  commentImage: {\n    width: 200,\n    height: 200,\n  },\n  changeContainer: {\n    flexDirection: 'row-reverse',\n    position: 'absolute',\n    right: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}