{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axiosInstance from \"./config/axiosInstance\";\nimport { urls } from \"./config/urls\";\nimport Cloudinary from \"./Cloudinary\";\nexport var User = function () {\n  function User() {\n    _classCallCheck(this, User);\n  }\n\n  _createClass(User, null, [{\n    key: \"getProfile\",\n    value: function getProfile() {\n      return _regeneratorRuntime.async(function getProfile$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axiosInstance('get', urls.user.profile).then(function (res) {\n                return res.data;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(data) {\n      var newImage;\n      return _regeneratorRuntime.async(function updateProfile$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!data.pickedImage) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Cloudinary.uploadImage(data.pickedImage));\n\n            case 3:\n              _context2.t0 = _context2.sent;\n              _context2.next = 7;\n              break;\n\n            case 6:\n              _context2.t0 = data.image;\n\n            case 7:\n              newImage = _context2.t0;\n              return _context2.abrupt(\"return\", axiosInstance('post', urls.user.saveProfile, _objectSpread(_objectSpread({}, data), {}, {\n                image: newImage\n              })).then(function (res) {\n                return res.data;\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return User;\n}();","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/api/User.js"],"names":["axiosInstance","urls","Cloudinary","User","user","profile","then","res","data","pickedImage","uploadImage","image","newImage","saveProfile"],"mappings":";;;;;;;;;AAAA,OAAOA,aAAP;AACA,SAASC,IAAT;AACA,OAAOC,UAAP;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA,+CACSH,aAAa,CAAC,KAAD,EAAQC,IAAI,CAACG,IAAL,CAAUC,OAAlB,CAAb,CAAwCC,IAAxC,CAA6C,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAb;AAAA,eAA7C,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA,WAKE,uBAA2BA,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBA,IAAI,CAACC,WADxB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEYP,UAAU,CAACQ,WAAX,CAAuBF,IAAI,CAACC,WAA5B,CAFZ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAGMD,IAAI,CAACG,KAHX;;AAAA;AACQC,cAAAA,QADR;AAAA,gDAKSZ,aAAa,CAAC,MAAD,EAASC,IAAI,CAACG,IAAL,CAAUS,WAAnB,kCACfL,IADe;AAElBG,gBAAAA,KAAK,EAAEC;AAFW,iBAAb,CAGJN,IAHI,CAGC,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAb;AAAA,eAHD,CALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;;AAAA;AAAA","sourcesContent":["import axiosInstance from './config/axiosInstance';\nimport { urls } from './config/urls';\nimport Cloudinary from './Cloudinary';\n\nexport class User {\n  static async getProfile() {\n    return axiosInstance('get', urls.user.profile).then((res) => res.data);\n  }\n\n  static async updateProfile(data) {\n    const newImage = data.pickedImage\n      ? await Cloudinary.uploadImage(data.pickedImage)\n      : data.image;\n\n    return axiosInstance('post', urls.user.saveProfile, {\n      ...data,\n      image: newImage,\n    }).then((res) => res.data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}