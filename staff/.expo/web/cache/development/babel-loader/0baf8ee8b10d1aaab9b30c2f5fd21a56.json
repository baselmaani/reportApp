{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { Badge, IconButton } from 'react-native-paper';\nimport Comments from \"./Comments\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CommentsSection = function CommentsSection(_ref) {\n  var _feed$_count, _feed$_count2;\n\n  var feed = _ref.feed;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayComments = _useState2[0],\n      setDisplayComments = _useState2[1];\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.iconContainer,\n      children: [(feed == null ? void 0 : (_feed$_count = feed._count) == null ? void 0 : _feed$_count.comments) > 0 && _jsx(View, {\n        size: 20,\n        style: styles.badge,\n        children: _jsx(Text, {\n          style: styles.badgeText,\n          children: \"\" + (feed == null ? void 0 : (_feed$_count2 = feed._count) == null ? void 0 : _feed$_count2.comments)\n        })\n      }), _jsx(IconButton, {\n        icon: \"comment\",\n        color: \"#3c3c3c50\",\n        onPress: function onPress() {\n          return setDisplayComments(!displayComments);\n        },\n        size: 20\n      })]\n    }), displayComments && _jsx(Comments, {\n      feed: feed\n    })]\n  });\n};\n\nexport default CommentsSection;\nvar styles = StyleSheet.create({\n  iconContainer: {},\n  badge: {\n    bottom: 0,\n    right: 20,\n    position: 'absolute'\n  },\n  badgeText: {\n    color: '#3c3c3c50'\n  }\n});","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/pages/news/CommentsSection.js"],"names":["React","useState","Badge","IconButton","Comments","CommentsSection","feed","displayComments","setDisplayComments","styles","iconContainer","_count","comments","badge","badgeText","StyleSheet","create","bottom","right","position","color"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,oBAAlC;AACA,OAAOC,QAAP;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACpC,kBAA8CL,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOM,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,SACE,MAAC,IAAD;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA,iBACG,CAAAJ,IAAI,QAAJ,4BAAAA,IAAI,CAAEK,MAAN,kCAAcC,QAAd,IAAyB,CAAzB,IACC,KAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAgB,QAAA,KAAK,EAAEH,MAAM,CAACI,KAA9B;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA,0BAAmCR,IAAnC,qCAAmCA,IAAI,CAAEK,MAAzC,qBAAmC,cAAcC,QAAjD;AAAA;AADF,QAFJ,EAOE,KAAC,UAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMJ,kBAAkB,CAAC,CAACD,eAAF,CAAxB;AAAA,SAHX;AAIE,QAAA,IAAI,EAAE;AAJR,QAPF;AAAA,MADF,EAeGA,eAAe,IAAI,KAAC,QAAD;AAAU,MAAA,IAAI,EAAED;AAAhB,MAftB;AAAA,IADF;AAmBD,CArBD;;AAuBA,eAAeD,eAAf;AAEA,IAAMI,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,aAAa,EAAE,EADgB;AAE/BG,EAAAA,KAAK,EAAE;AACLI,IAAAA,MAAM,EAAE,CADH;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GAFwB;AAO/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE;AADE;AAPoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useState } from 'react';\nimport { Badge, IconButton } from 'react-native-paper';\nimport Comments from './Comments';\n\nconst CommentsSection = ({ feed }) => {\n  const [displayComments, setDisplayComments] = useState(false);\n  return (\n    <View>\n      <View style={styles.iconContainer}>\n        {feed?._count?.comments > 0 && (\n          <View size={20} style={styles.badge}>\n            <Text style={styles.badgeText}>{`${feed?._count?.comments}`}</Text>\n          </View>\n        )}\n\n        <IconButton\n          icon='comment'\n          color='#3c3c3c50'\n          onPress={() => setDisplayComments(!displayComments)}\n          size={20}\n        />\n      </View>\n      {displayComments && <Comments feed={feed} />}\n    </View>\n  );\n};\n\nexport default CommentsSection;\n\nconst styles = StyleSheet.create({\n  iconContainer: {},\n  badge: {\n    bottom: 0,\n    right: 20,\n    position: 'absolute',\n  },\n  badgeText: {\n    color: '#3c3c3c50',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}