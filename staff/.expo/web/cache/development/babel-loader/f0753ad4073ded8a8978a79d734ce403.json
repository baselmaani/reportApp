{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState } from 'react';\nimport { useEvents } from \"../../hooks/useEvents\";\nimport { useCurrentLocation } from \"../../hooks/useCurrentLocation\";\nimport FeedItem from \"../news/FeedItem\";\nimport EventItem from \"./EventItem\";\nimport Layout from \"../../shared/layout/Layout\";\nimport LoadingView from \"../../shared/loading/LoadingView\";\nimport { Provider } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Events = function Events() {\n  var _useCurrentLocation = useCurrentLocation(),\n      currentLocation = _useCurrentLocation.currentLocation;\n\n  var _useEvents = useEvents({\n    lat: currentLocation == null ? void 0 : currentLocation.latitude,\n    lng: currentLocation.longitude\n  }),\n      data = _useEvents.data,\n      status = _useEvents.status,\n      loadMore = _useEvents.loadMore;\n\n  if (status === 'loading') return _jsx(LoadingView, {});\n  console.log('new data -----------------------');\n  console.log(data == null ? void 0 : data.pages);\n  return _jsx(Layout, {\n    children: _jsx(Provider, {\n      children: _jsx(View, {\n        children: _jsx(View, {\n          style: styles.container,\n          children: _jsx(FlatList, {\n            showsVerticalScrollIndicator: false,\n            keyExtractor: function keyExtractor(_ref) {\n              var item = _ref.item;\n              return item == null ? void 0 : item.id;\n            },\n            data: data == null ? void 0 : data.pages.map(function (page) {\n              return page.data;\n            }).flat(),\n            renderItem: function renderItem(_ref2) {\n              var item = _ref2.item;\n              return _jsx(EventItem, {\n                event: item\n              });\n            },\n            onEndReachedThreshold: 0.4,\n            onEndReached: loadMore\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default Events;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/almaani/Documents/GitHub/reportsApp/staff/src/pages/events/Events.js"],"names":["React","useState","useEvents","useCurrentLocation","FeedItem","EventItem","Layout","LoadingView","Provider","Events","currentLocation","lat","latitude","lng","longitude","data","status","loadMore","console","log","pages","styles","container","item","id","map","page","flat","StyleSheet","create"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT;AACA,SAASC,kBAAT;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,4BAA4BN,kBAAkB,EAA9C;AAAA,MAAQO,eAAR,uBAAQA,eAAR;;AAEA,mBAAmCR,SAAS,CAAC;AAC3CS,IAAAA,GAAG,EAAED,eAAF,oBAAEA,eAAe,CAAEE,QADqB;AAE3CC,IAAAA,GAAG,EAAEH,eAAe,CAACI;AAFsB,GAAD,CAA5C;AAAA,MAAQC,IAAR,cAAQA,IAAR;AAAA,MAAcC,MAAd,cAAcA,MAAd;AAAA,MAAsBC,QAAtB,cAAsBA,QAAtB;;AAIA,MAAID,MAAM,KAAK,SAAf,EAA0B,OAAO,KAAC,WAAD,KAAP;AAC1BE,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,oBAAYA,IAAI,CAAEK,KAAlB;AACA,SACE,KAAC,MAAD;AAAA,cACE,KAAC,QAAD;AAAA,gBACE,KAAC,IAAD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,oBACE,KAAC,QAAD;AACE,YAAA,4BAA4B,EAAE,KADhC;AAEE,YAAA,YAAY,EAAE;AAAA,kBAAGC,IAAH,QAAGA,IAAH;AAAA,qBAAcA,IAAd,oBAAcA,IAAI,CAAEC,EAApB;AAAA,aAFhB;AAGE,YAAA,IAAI,EAAET,IAAF,oBAAEA,IAAI,CAAEK,KAAN,CAAYK,GAAZ,CAAgB,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACX,IAAf;AAAA,aAAhB,EAAqCY,IAArC,EAHR;AAIE,YAAA,UAAU,EAAE;AAAA,kBAAGJ,IAAH,SAAGA,IAAH;AAAA,qBAAc,KAAC,SAAD;AAAW,gBAAA,KAAK,EAAEA;AAAlB,gBAAd;AAAA,aAJd;AAKE,YAAA,qBAAqB,EAAE,GALzB;AAME,YAAA,YAAY,EAAEN;AANhB;AADF;AADF;AADF;AADF,IADF;AAkBD,CA5BD;;AA8BA,eAAeR,MAAf;AAEA,IAAMY,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, FlatList } from 'react-native';\nimport React, { useState } from 'react';\nimport { useEvents } from '../../hooks/useEvents';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport FeedItem from '../news/FeedItem';\nimport EventItem from './EventItem';\nimport Layout from '../../shared/layout/Layout';\nimport LoadingView from '../../shared/loading/LoadingView';\nimport { Provider } from 'react-native-paper';\nconst Events = () => {\n  const { currentLocation } = useCurrentLocation();\n\n  const { data, status, loadMore } = useEvents({\n    lat: currentLocation?.latitude,\n    lng: currentLocation.longitude,\n  });\n  if (status === 'loading') return <LoadingView />;\n  console.log('new data -----------------------');\n  console.log(data?.pages);\n  return (\n    <Layout>\n      <Provider>\n        <View>\n          <View style={styles.container}>\n            <FlatList\n              showsVerticalScrollIndicator={false}\n              keyExtractor={({ item }) => item?.id}\n              data={data?.pages.map((page) => page.data).flat()}\n              renderItem={({ item }) => <EventItem event={item} />}\n              onEndReachedThreshold={0.4}\n              onEndReached={loadMore}\n            />\n          </View>\n        </View>\n      </Provider>\n    </Layout>\n  );\n};\n\nexport default Events;\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}